---
layout: rmit
title: Software Engineering Project Management | Semester 2, 2015 | RMIT
permalink: /rmit/project-management/tutorials/
---

h1. Tutorial Notes

"Exam prep":../exam/

"Notes":../week-01/

h2(#Tutorial-2). Tutorial 2

h3. Contrast project with a non-project

A project is unique, has definite outcomes and is temporary: there is a due date. A project is creating an iPhone app for CFA before the expected start of the bushfire season.

A non-project will not have all of these properties at the same time. A non-project is characterized by business-as-usual activities.

In a project-based organisational structure the employees of a company are organised around projects. Each team is focussed on the successful delivery of the project's outcomes.

h3. Distinction between a program and a project

A program groups projects together that are coherent set of activities that make up a larger, generalised effort. Each project must be managed to ensure they contribute to the overall success of the program.

h3. Why the functional manager should attend the project launch meeting

The functional managers have to give their approval to allow the project manager to allocate the functional managers' personnel to the project.

The project's success may depend on the functional manager's willingness to allow important subordinates to take part in the project.

The cooperation of the functional managers may increase when they have an understanding of the importance of the project. They may also help with the initial plan.

h3. Different types of risk

*Highly probably risks* Likely to eventuate but the degree of impact may be negligible to severe

*Extremely serious risks* Will severely impact the project but the probability is low to high

*Highly vulnerable areas* Highly probable and extremely serious risks. Often associated with activities that are untried and have substantial resources

h3. Problems that arise from an incomplete Project Charter

table(grid simple).
| Purpose | Not meeting strategic reasons for conducting the project |
| Objectives | Missed specifications; ill-defined deliverables |
| Overview | Key milestones missed; opportunities to uncover problems early are missed |
| Schedules | Required tasks overlooked or missing; project misses due date; cost overruns |
| Resource requirements | Failure to have resources available when needed; cost elements are omitted |
| Personel and Stakeholders | Skill requirements and training not considered; not involving critical stakeholders; the schedule may blow out and costs increase | 
| Risk management | Missed plans for risk mitigation that could lead to project delay and/or exceeding the budget; Misunderstood risk assessment; |
| Evaluation methods | Import performance data not captured; timeliness of problem discovery is affected; mislead PM about other project goals not specifically detailed |

h2(#Tutorial-3). Tutorial 3

h3. Components of a Project Charter

# Purpose
# Objectives
# Overview
# Schedule
# Resource requirements
# Personnel and Stakeholders
# Risk management
# Evaluation methods

h3. RACI Matrix

A RACI matrix is a grid that shows the degree of involvement for each person associated with the project according to task. Each person is assigned one of four values for each task:

1. Responsible - The person(s) responsible for the successful completion of the task (or deliverable)
2. Accountable - The person ultimately responsible for the completion of the task - has approval authority. At least one A in each row.
3. Consult - The person to be consulted prior to a final decision or action. They may also be informed about the progress of the task. It is two-way communication.
4. Inform - The person only needs to be informed after the decision or action, not just progress.

The rows of the matrix are the tasks derived from the WBS and the columns are the departments or people involved in the project. The value of the RACI matrix is that it helps to organise the project team according to the responsibilities of the project team members.

Drawbacks for not implementing a RACI matrix for the project:

* Stakeholders are not informed when problems occur
* Critical information is not given thus causing a task to be completed incorrectly then delaying the project
* Conflict over who is accountable for an incompleted task
* A task without someone responsible for it will not be started, let alone finished
* Functional managers are upset when not informed of project changes

h3. Qualitative Risk Analysis with FMEA

IT firm tendering for work with large retail company. Risks:

# Competition: high probability for very competitive bids and potential impact is substantial
# Economy: economy is heading to a mild recession but the impact is high as company would not advertise
# Chance of loss of bid: small probability but with a negative impact
# Personnel loss (head of IT headhunted by competitor): probability of loss is moderate

FMEA: *F*ailure *M*ode and *E*ffect *A*nalysis.

* *S*: Severity - 1 = No effect, 10 = Very severe
* *L*: Likelihood - 1 = Unlikely, 10 = Almost certain to happen
* *D*: Detection - 1 = Almost certain failure can be detected, 10 = Certain failure can't be detected

|_. Failure |_. S |_. L |_. D |_. RPN |
| Competition wins | 8 | 8 | 1 | 64 |
| Company does not advertise | 8 | 6 | 5 | 240 |
| Loss of bid | 10 | 1 | 1 | 10 |
| Personnel loss | 7 | 5 | 5 | 175 |

h3. Risk Identification Technique - Scenario Analysis

Envision a likely scenario that as will greatly impact an organisation and identifying the possible outcomes.

For example: A software company is aware that a competitor is developing a restaurant mobile phone app and if the app is not released by the end of the month, the organization will not receive investment capital and thus the organization may have to liquidate.

Once the major risks are identified, analysis should be pursued following collection of this data:

* Probability of each risk occuring
* Range or distribution of possible outcomes should the risk occur
* Probabilities of each outcome
* Expected timing of each outcome

Getting as much data and accurate estimates as possibleis crucial for follow-on analysis.

h2(#Tutorial-4). Tutorial 4

h3. Micromanagement

Micromanagement is the behaviour of a manager who needs to control every action of their subordinates.

It is bad managerial practice because it does not allow trust to develop between the manager and their subordinates.

h3. Scheduling as the Major Focus

Throughout the history of project management, the focus has been on scheduling rather than performance and budgeting because it is the most difficult part of the plan to get right. There are many characteristics of the schedule - timing, resources, durations - to estimate correctly and that if a task on the critical path is delayed then the entire project is delayed.

h2(#Tutorial-5). Tutorial 5

h3. Why is a PM concerned with Resource Allocation?

Resource allocation - availability of people to complete tasks within the duration specified in the project plan.

* Project plan lists general categories of resource requirements - the PM still needs to arrange to get the specific resources
* Project plan may specify how much of the resource and priority for an activity - but may not specify when exactly the resource is needed by the PM
* Project plan may specify the amount of a resource need for a project, but no mechanism is available to balance the load of the resource across projects - this may lead to conflict and bottlenecks

h3. Difference between a fixed delivery day and fixed limit on resources

A project with a fixed delivery day may have access to more resources to ensure it delivers on time; a project with a fixed limit on resource usage has to plan carefully around the available resources and delay the delivery date.

h3. Student syndrome

Definition: "Too much time available, leave until last minute"

The PM should:

* make a "fake deadline" to induce urgency but the real deadline is then announced (as slack)
* attempt to strike a balance between unrealistic deadlines and slack time
* set goals that have a reasonable chance (40 - 60 percent) of being met

h3. S-shaped and J-shaped Lifecycles

An S-shaped project lifecycle involves a slow build up, has a period of quick momentum, then a slow finish.

A J-shaped project has a slow start then a rapid finish.

Project A: S-shaped lifecycle
Project B: J-shaped lifecycle

Project C would borrow the important resouce from Project A as it is slowing down as it nears completion; taking the resource away from Project A won't have as great an impact than if the resource was taken from Project B. Project B is rapidly finishing its project and any reallocation of resources will disrupt its progress.

h3. Critical Path

The definition of "critical path" for a project may be modified when activity times are not known with certainty as it is unknown what the impact of a delay in one activity will have on the entire project. It may only become clearer during the execution of the project.

One danger is that the PM may focus exclusively on a potential critical path and other paths fall behind that end up delaying the project. All paths that have the potential to delay the project shoud be appropriately managed.

h2(#Tutorial-6). Tutorial 6

h3. Accounting for Project Overheads in Project Estimates

The time and cost required for developing the planning, monitoring and controlling systems should be included in the scheduling and the budget estimates. If there is a cost implication, such as software or other tools, then this is required to be part of the budget. The time needs to be planned for and including these tasks in the action plan or WBS will help the PM and other stakeholders understand what is needed for a succesful execution.

h3. Verbal Characterisations of a Project Team

Measure a project management characteristic, such as "energy" using a scale of 1 - 5 where each team member is asked:

* I look forward to coming to work each day
* I find facing and resolving new challenges stimulating
* I take immediate action when I discover a problem

h3. Monitoring System and Failure

If a monitoring system can only report on activities that have finished, for a PM to see what will go wrong they will have to look for clues in the monitoring system of something about to go wrong. These clues should already be present as data of things gone wrong.

Use the monitoring system tp anticipate future problems rather than reacting to them as after they have happened. The monitoring system may include "lead indicators" as symptoms of problems.

h3. Weekly or Daily Project Progress Report Meetings

It is often to difficult to prevent a meeting for a standard progress report because there are stakeholders who need the face-to-face contact to listen to the status update and provide feedback directly. These meetings are justifiable early in the project to build relationships with team members and stakeholders.

h3. Earned Value and other Variances

Project in 26 ^th^ week with actual cost $270,000. Scheduled to have spent $261,000. To date, the budgeted value for the work performed is $272,000.

AC = 270,000 (actual cost of work performed)
PV = 261,000 (budget cost of work scheduled)
EV = 272,000 (budget cost of work performed)

Cost variance = EV - AC = $272,000 - 270,000 = $2,000
Scheduled variance = EV - PV = $272,000 - 261,000 = $11,000
Cost Performance Index = EV / AC = $272,000 / 270,000 = 1.01
Schedule Performance Index = EV / PV = $272,000 / 261,000 = 1.04

More has been spent than the baseline plan, but considerably more progress has been made than was either anticipated or a bit more relative to what was spend (good variance).

h2(#Tutorial-7). Tutorial 7

h3. Main Steps of RUP

*1. Inception*

* Vision, objectives - the scope of the project
* Bring business risks under control
* Milestone: Lifecycle Objective

*2. Elaboration*

* Architecture
* Requirements
* Modelling
* Bring architectural and technical risks under control
* Milestone: Lifecycle Architecture

*3. Constuction*

* Software development
* Classes
* Services
* Bring logistical, project execution risks under control
* Milestone: Initial Operational Capacity

*4. Transition*

* Release to customers
* Manuals
* Bring roll-out risks under control
* Product release

h3. Questions to ask for each phase

*Inception*

* If the system already exists, how important is it to understand it?
* Are we delivering software as well as the hardware it runs on?
* Are we changing the business processes as well as building the system?

*Elaboration*

* Is this a new system? Have the team built anything like this before?
* What framework or frameworks will be used for construction?
* Is this new technology available to the team?
* Will the services support thousands of requests?

*Construction*

* Is there a separate integration test environment?
* What is the source control system in use?
* Is there a continuous integration pipeline?
* Are the developers familiar with the frameworks?
* Is the team co-located?

*Transition*

* Are you expecting a beta release cycle?
* Can the system be delivered incrementally?

h3. SDLC Probes

|_. Factor |_. Questions to ask? |_. SDLC to use |
| Type of work | Is there a clearly defined outcome? | For transactional system development, Waterfall is better suited. For creative endeavours such as websites, Agile is preferred. |
| Type of customer | Are they willing to work in an iterative way? | Agile |
| View of your manager | Can they adapt to a different approach? | Agile |
| View of IT within the organization | Is IT seen as a valued partner or a necessary evil? | If the latter, us Waterfall |
| Internal or external customer | Is your customer internal or external? | Waterfall works will with external customers bound to a contract; internal customers have the backing of senior management when changes are requested |

h2(#Tutorial-8). Tutorial 8

h3. Scrum terms

- Collocation := All members of the Scrum team are based in the same office building. Having a distributed team may not work with agile - "people over processes".
- Servant leadership := The "Scrum Master" must not assign tasks to team members; must be a facilitator in meetings; must be a coach and mentor (in the ways of Scrum and Agile) to the team
- Kaizen := A Japanese word that means to learn through reflection for self-improvement.

"Kaizen Institution":http://www.kaizen.com/about-us/definition-of-kaizen.html

* Good processes bring good results
* Go see for yourself to grasp the current situation
* Speak with data, manage by facts
* Take action to contain and correct root causes of problems
* Work as a team
* Kaizen is everybody’s business

h3. Where does the Project Manager fit into the Scrum process?

They don't have direct contact with Scrum teams. 

A the tasks that a Project Manager would normal undertake are distributed across all members of the Scrum team. It is not a simple mapping from Project Manager to Scrum Master or Project Manager to Product Owner.

They may however be involved with planning, resourcing and risk management for a program.

h3. Where does the Business Analyst fit into the Project Management process?

There is not a role in the Scrum team responsible for gathering of requirements.

However, business analysis is a vital element of change process. Real dangers exist if the business analyst role is ignored and a project is too focused on its scope, ignoring the rest of the business and those stakeholders.

* In the planning stage of the project
* Understand the needs of the business and customer
* Produce requirements for the development team
* Business modelling

*Roles in the Scrum Team*

* Project Charter: PO, Team, SM
* Contracts: PO (indirectly through business)
* Priorities: PO (consult with team)
* Risk: PO, SM, Team
* Self-organized team

h3. What to ask of the Business Analyst in a Scrum project

* Work with the product owner to research user stories and meet other parts of the business to explain what is needed and what is being done
* Work with the team to uncover system documentation, develop user acceptance tests, ensure copy is signed off, seeking approval for use of a third-party product

h3. Reasons for Conflict in the Project Lifecycle

These are the phases considered:

# Project formation
# Early program
# Main program
# Toward end of program

table(grid simple).
|_. Source of conflict |_. Reason for decline during project life span |
| Project priorities | Higest at start due to arguments over priorities of key elements; while they decline, they continue to be a major area of conflict during the project |
| Administrative procedured | Highest during first two phases; issues are usually resolved by the main phase and the rate of conflict declines rapidly |
| Technical trade-offs | Highest during second and third phases due to the issues of trade-off decisions needing to be resolved |
| Staffing | Conflict remains largely constant over the project life span, especially when staff are drawn from functional areas |
| Support cost estimates | Minor source of conflict and remain constant during the project life span |
| Schedules | The greatest source of conflict. Becomes highest in the main program because of the continual pressure to push the project toward completion |
| Personalities | If the same individuals are involved during the entire project life span, the conflict remains constant |
| Total | The largest numbers of conflicts occur in the early stage of a project and the smallest number during the late phase by which time many of the sources of conflict have been resolved. |

h2(#Tutorial-9). Tutorial 9

h3. Spike

This is work to discover if a concept is feasible given the technology available. It doesn't form part of the shippable product. The work may take place in between sprints or as a work item within a sprint and is time-boxed.

h3. Tracer Bullet

This is work to implement a thin slice of end-to-end functionality through the system, given the technology available and practices to follow. The work is production quality.

h3. Definition of Done (DoD)

The exit criteria the Scrum team have agreed upon to determine if a product backlog item is complete. Usually this is after regression testing and user acceptance testing.

h3. Abnormal Termination

The current sprint is abandoned and a new sprint is started. This may happen as a result in a dramatic shift in business priorities. Termination is at the behest of the Product Owner, but beforehand they may seek input from management or the Scrum Team.

h3. Scrum-ban

Scrum-ban is a combination of elements from both Scrum and Kanban. Scrum has work divided into sprints of a defined duration; Kanban has a continuous workflow. Scrum-ban has a minimum amount of work required for each task.

h3. Mapping Agile to PMBOK

Agile can be mapped to PMBOK because:

* PMBOK does not prescribe any methodology; PM determines what processes are appropriate and to what degree applicable to the project
* A phase defined in the PMBOK is similar to a Scrum Release (?)
* The sub-phases of a project can be mapped to individual iterations or sprints

Main adjustments:

* Consider each sub-phase of a traditional project to be a compelte cycle of design, development and test, resulting in working software (mini-waterfalls)
* Consider Requirements, Design, Development and Testing and Deployment to be activities and *not phases* where each phase encompass all these activities, always resulting working software

h3. Map PMBOK areas to SCRUM Processes 

table(grid simple).
|_. Knowledge Area |_. PMI Process / Practice | Scrum Process / Practice |
|/5(area). *Integration Management* | Project Charter | Product Roadmap, Vision and Backlog |
| Project Management Plan | high-level release plan (Rolling wave Planning) |
| Direct and Manage; Monitor and Control | Scrum team executes and delivers; Scrum principles; Scrum team self-manages; continuous improvement |
| Integrated Change Control | constant feedback during iteration and review; (ranked) product backlog |
| Close Project or Phase | Sprint reviews / retrospectives; Sprint N+1 for admin closure or audits if necessary |
|/5(area). Scope Management | Collect Requirements | Develop Product Backlog |
| Define Scope | Select PBIs for release or sprints |
| Create WBS | Create Feature Breakdown Structure for release; breakdown into scenarios for sprint |
| Verify Scope | feature acceptance (by PO) |
| Control Scope | Manage via backlog and  PO; protect iteration |
|/5. Risk Management | Risk Planning | Informal risk planning as part of sprint/release planning and review meetings. Entire team is involved |
| Risk Identification | Identify risks in daily scrums; iteration/release planning reviews |
| Qualitative / Quantitative Risk Analysis | Risk matrices (probability x impact) may be created if needed |
| Risk Response Planning | Avoidance (change scope or resources); mitigation (POC); transfer (outsource); acceptance (contingency plans) |
| Monitor and Control Risks | Part of team planning and review |

h2(#Tutorial-10). Tutorial 10

h3. Kanban board at end of sprint

The project manager was upset because:

* More tasks in progress than developers on team
* Task pulled into "In Progress" and left there
* Feature B - second highest priority - not worked on until end of sprint
* Feature C worked on throughout sprint but not finished. No help for developer responsible
* Several features in progress at the same time causing unmanaged code changes and integration problems

h3. Improve Scrum process with Lean thinking

* Each team limits WIP to one feature at a time
* Feature not complete until integrated into main line
* Before work on another feature, teams rebase from main line

The intent is:

* Smoother deliver of features; no longer will teams be idle; no Integration week
* Continuous integration: time to integrate changes becomes less as experience grows
* No doubts about Definition done: when feature is in main line
* Team more productive as they don't have to wait to integrate code increasing the ability to ship

h2(#Tutorial-11). Tutorial 11

h3. Early commitment by Scrum team wastes ideas

To avoid premature commitment that leads to other options being discarded, it is best to defer the decision until the very last moment while waiting for more information to make a clear decision to commit.

h3. Development team not collaborating and placing pressure on tester

Team members become cross-functional and to share the load of some of the work activities. After each sprint retrospective the team members agree to work together to combine the stages involved into finishing work. The developers agree to write some of the tests to reduce pressure on the tester.

* Working together to improve the process and the value stream

h3. Disciplined Agile Delivery (DAD)

DAD is a step beyond Scrum because:

* Scrum only really is concered about project execution - the sprints (planning, execution and retrospection)
* DAD has 3 stages: Inception > Construction > Transition

h2(#Tutorial-12). Tutorial 12

h3. Termination project

* Only one person conducting the project (no "project selection")
* Distribution of resources and personnel rather than acquisition
* Tasks are standard or specified in advance
* Best conducted by someone who is not emotionally invested in the project
* Completely administrative with one purpose

h3. Who make the best auditors?

* Internal auditors: probably more efficient and less expensive. However, not objective and not able to compare against other organizations
* External auditors: more expensive; better able to compare project outcomes with other organizations

h3. Project evaluation

Evaluate based on project goals because:

* They are specific
* They may change during the course of the project
* Project goals may have been minimized to ensure selection

Project selection is good, _but not sufficient_ tool for evaluating a completed project or to determine if a project should be terminated.

h3. Project auditing by an external consultant

* No formal audit process; not enough time to take corrective measures
* Auditor failed to follow up requested documentation
* Opinion from one team member not followed up by asking other team members or having conversation with PM; superficial
* Senior management unable to make an informed decision due to lack of data on project status

Keywords for criticism:

* Tone: needs to be constructive
* Problems to be solved must be enumerated (techincal challenges)
* Provide estimates of new due date if project will be delayed

h3. Pros and cons of external auditor

*Pros*

* Dig deep and press for answers without affecting worker relationships
* Brings expertise to the organization
* Can do work without interfering with other projects

*Cons*

* Lack of confidence, need to build trust
* Unaware of office politics
* Unaware of the information senior management needs

<nav class="nav-lectures">
	<ul>
		<li class="index"><a href="../exam/">Exam Prep</a></li>
		<li class="next-lecture"><a href="../week-01/">Notes</a></li>
	</ul>
</nav>